#ifndef TANK_IMAGE_FLIPPED_H
#define TANK_IMAGE_FLIPPED_H

#include <stdint.h>

#define TANK_WIDTH  40
#define TANK_HEIGHT 20

typedef struct {
    int16_t x, y;      // topâ€‘left corner of bullet
    int16_t oldx, oldy;
    int16_t vx, vy;    // velocity
    bool active;
} projectile_t;

typedef struct {
  int16_t spriteX;
  int16_t spriteY;
  int16_t pivotDx;
  int16_t pivotDy;
  uint8_t angleDeg;
} tank_t;

typedef struct {
    int16_t x0, y0;
    int16_t x1, y1;
} aim_t;

const uint16_t TankImage[TANK_HEIGHT][TANK_WIDTH] = {
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xF79E, 0xF77D, 0xF77E, 0xE6FB, 0xBDD6, 0xC618, 0xCE79, 0xBDF6, 0xC638, 0xCE79, 0xBDF6, 0xC638, 0xCE79, 0xBDD6, 0xC638, 0xCE79, 0xBDD6, 0xC638, 0xCE59, 0xBDD6, 0xC638, 0xCE59, 0xBDD6, 0xC638, 0xEF5D, 0xF79E, 0xF77D, 0xEF7D, 0xF77E, 0xEF5D, 0xEF5D, 0xEF5D, 0xEF5D, 0xFFBF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xF79E, 0xCE99, 0x8C90, 0x3264, 0x5B6A, 0x94F2, 0x3285, 0x638A, 0x94F1, 0x3285, 0x63AB, 0x94D1, 0x3264, 0x6BCC, 0x8CD1, 0x3264, 0x6BCC, 0x8CB0, 0x3264, 0x6BEC, 0x8C90, 0x3264, 0x638B, 0xC658, 0xD699, 0xF79E, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFDF, 0xC658, 0x6BCC, 0x6BAC, 0x638B, 0x3A86, 0x42E7, 0x5328, 0x3AA6, 0x42E7, 0x5328, 0x3AA6, 0x42E7, 0x4B28, 0x3A86, 0x42E7, 0x4B08, 0x3A86, 0x42E7, 0x4B08, 0x3A86, 0x4AE7, 0x4B08, 0x3A86, 0x5B4A, 0xBDF6, 0x73EE, 0x5B2A, 0xD6BA, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xDF1A, 0x4BC6, 0x42C7, 0x4266, 0x42E7, 0x3AC5, 0x3AC5, 0x3A85, 0x3AC5, 0x3AE5, 0x3AA5, 0x3AC5, 0x3B05, 0x3AC5, 0x42C6, 0x3B05, 0x3B05, 0x42E6, 0x4305, 0x3B25, 0x4326, 0x4306, 0x4345, 0x4366, 0x4326, 0x4326, 0x4B26, 0x4346, 0x63EA, 0xE71C, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xE73C, 0x5C28, 0x5C87, 0x5C88, 0x5CA8, 0x5CA8, 0x5CA8, 0x5CA8, 0x5CC8, 0x5CC8, 0x5CC8, 0x5CC8, 0x5CA8, 0x5CA8, 0x5CA8, 0x5CA8, 0x5CA8, 0x5CA8, 0x5CA8, 0x5CA7, 0x5CA7, 0x5CE7, 0x5CE7, 0x5CC7, 0x5CE7, 0x54E7, 0x54C7, 0x54C6, 0x43E5, 0x6CAA, 0xD6F9, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFBF, 0x5388, 0x43A5, 0x4BE6, 0x4C26, 0x4BE6, 0x4BE5, 0x4405, 0x4445, 0x4445, 0x4445, 0x4C26, 0x4C66, 0x4C66, 0x4C66, 0x4C66, 0x4C66, 0x4C66, 0x4C66, 0x4C66, 0x4C46, 0x5447, 0x5427, 0x5447, 0x5488, 0x5C88, 0x6D0A, 0x8DCF, 0xA5F2, 0xE75B, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0x848F, 0x5C48, 0x5C88, 0x5C88, 0x64A9, 0x6CCB, 0x8D4F, 0x8D6F, 0x9DD1, 0x8D4F, 0x646A, 0x43A6, 0x4BA6, 0x4BA6, 0x43A6, 0x4B86, 0x5407, 0x5C47, 0x5C67, 0x5447, 0x74AC, 0xADD4, 0xBE36, 0xBE36, 0xBE36, 0xCE98, 0xDEDA, 0xCE99, 0xCEB8, 0xCEB8, 0xC698, 0xCEB9, 0xD6DA, 0xD6DA, 0xD6DA, 0xD6D9, 0xF7BE, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xEF7C, 0xE75C, 0xEF7D, 0xEF9D, 0xF7BE, 0xFFDF, 0xFFDF, 0xF79E, 0x644A, 0x43C5, 0x43E5, 0x43E5, 0x43E6, 0x5467, 0x5CC7, 0x5D48, 0x6548, 0x6529, 0x6CAA, 0x7D0D, 0x8D2F, 0x9591, 0x9590, 0x9590, 0x9570, 0x9570, 0x850E, 0x856D, 0x856D, 0x854D, 0x8D0F, 0x9570, 0x9570, 0x9570, 0x9570, 0xE73B, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xE75C, 0x8D6F, 0x64A9, 0x750B, 0x5C48, 0x5C47, 0x5C88, 0x858D, 0xA612, 0xADF4, 0xDF3B, 0xF7BE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xDEDB, 0xF7BE, 0xE71B, 0xCE99, 0xCE99, 0xF77D, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xEF5D, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF7BE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF},
  {0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF}
};

const uint16_t BulletImage[36] = {
  0,    0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0,    0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0
};

const uint16_t BulletImageDark[36] = {
  0, 0,    0,    0,    0,    0,
  0,    0,    0,    0,    0,    0,
  0,    0,    0,    0,    0,    0,
  0,    0,    0,    0,    0,    0,
  0,    0,    0,    0,    0,    0,
  0, 0,    0,    0,    0,    0
};




#endif /* TANK_IMAGE_FLIPPED_H */